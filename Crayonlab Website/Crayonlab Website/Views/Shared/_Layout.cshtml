@model Crayonlab.Models.ShopViewModel
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crayonlab - Printing Services</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <link href="https://fonts.cdnfonts.com/css/heaters" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="~/Content/site.css" />
    <link rel="stylesheet" href="~/css/navbar.css" />
</head>
<body>
    <nav>
        <div class="menu-toggle" id="menu-toggle">
            <i class="bi bi-list" style="font-size: 30px;"></i>
        </div>

        <ul id="nav-list" class="ul-navbar">
            <li>
                <div class="logo">
                    <img src="~/Content/assets/logo.png" alt="Crayonlab Logo">
                </div>
            </li>
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li>@Html.ActionLink("Shop", "Index", "Shop")</li>
            <li>@Html.ActionLink("Product", "Index", "Product")</li>
            <li>@Html.ActionLink("Contact", "Index", "Contact")</li>
            <li class="search-container">
                <input type="text" class="search-input" placeholder="Search...">
                <span class="search-icon"><i class="bi bi-search"></i></span>
            </li>

            <!-- Add Cart Icon to Navbar -->


            @if (User.Identity.IsAuthenticated)
            {
            <li>
                <form asp-action="Logout" asp-controller="Account" method="post" style="display: inline;">
                    <button type="submit" class="logout-button" style="width: 120px; height: 40px; background-color: #f00; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 16px;">Logout</button>


                </form>
            </li>
            }

            <li>
                <div class="right-icons" style="display: flex; align-items: center;">
                    <div class="logo-right">
                        <img src="~/Content/assets/logo1.png" alt="Secondary Logo">
                    </div>
                    <div class="facebook-icon">
                        <a href="https://www.facebook.com" target="_blank">
                            <i class="bi bi-facebook" style="font-size: 30px;"></i>
                        </a>
                    </div>
                </div>
            </li>
        </ul>
        <li class="cart-icon-container">
            <i class="bi bi-cart" id="cartIcon"></i>
            <span class="cart-counter" id="cartCounter">0</span>
        </li>
    </nav>

    <main>
        @RenderBody()
    </main>
    <footer>
        <div class="footer-container">
            <!-- Logo -->
            <div class="footer-logo">
                <img src="~/Content/assets/logo3.png" alt="Crayonlab Logo">
                <i class="bi bi-facebook"></i>
            </div>

            <!-- Subscription Section -->
            <div class="footer-links">
                <div class="footer-subscribe">
                    <h3>Subscribe</h3>
                    <form>
                        <input type="email" placeholder="Your e-mail">
                        <button type="submit">Send →</button>
                    </form>
                    <p>Subscribe to our website to receive our discount.</p>
                </div>

                <div class="column">
                    <h4>Products</h4>
                    <ul>
                        <li>Corporate Shirt</li>
                        <li>T-Shirt & Esport Shirt</li>
                        <li>Hoodie Jacket</li>
                        <li>Long Sleeve</li>
                        <li>Jersey Set</li>
                        <li>Embroidery</li>
                    </ul>
                </div>

                <div class="column">
                    <h4>Home</h4>
                    <ul>
                        <li>Shop</li>
                        <li>Categories</li>
                        <li>About</li>
                        <li>Contact</li>
                    </ul>
                </div>

                <div class="column contact">
                    <h4>Contact Us</h4>
                    <form>
                        <input type="text" placeholder="Your Name" required>
                        <input type="email" placeholder="Your Email" required>
                        <input type="text" placeholder="Subject" required>
                        <textarea placeholder="Message" required></textarea>
                        <button type="submit">Send</button>
                    </form>
                    <p>Email: crayonlab2023@gmail.com</p>
                    <h4>Address</h4>
                    <p>Mandaue, Looc, Cebu</p>
                    <h4>Contact Number</h4>
                    <p>0908-629-0972</p>
                </div>
            </div>

            <!-- Bottom Section -->
            <div class="footer-bottom">
                <p>© 2024 Crayonlab. Powered by Crayonlab</p>
            </div>
        </div>
    </footer>

    <!-- Shopping Cart Sidebar (now in layout so it's available everywhere) -->


    <script>
        // Cart functionality (now in layout so it's available everywhere)
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize cart object
            const cart = {
                items: [],
                get total() {
                    return this.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);
                },
                get itemCount() {
                    return this.items.reduce((count, item) => count + item.quantity, 0);
                },

                init() {
                    this.loadFromLocalStorage();
                    this.updateCartUI();
                    this.updateCartCounter();
                },

                addItem(product) {
                    const existingItemIndex = this.items.findIndex(item =>
                        item.id === product.id &&
                        item.size === product.size &&
                        item.gender === product.gender &&
                        item.frontImage === product.frontImage
                    );

                    if (existingItemIndex >= 0) {
                        this.items[existingItemIndex].quantity += product.quantity;
                        this.showNotification('Quantity updated');
                    } else {
                        const newItem = {
                            id: product.id,
                            name: product.name || "Product",
                            frontImage: product.frontImage || "",
                            price: product.price || 0,
                            size: product.size || "M",
                            gender: product.gender || "men",
                            quantity: product.quantity || 1
                        };
                        this.items.push(newItem);
                        this.showNotification('Added to cart');
                    }

                    this.saveToLocalStorage();
                    this.updateCartUI();
                    this.updateCartCounter();
                    this.animateAddToCart(product.frontImage);
                },

                removeItem(index) {
                    this.items.splice(index, 1);
                    this.saveToLocalStorage();
                    this.updateCartUI();
                    this.updateCartCounter();
                    this.showNotification('Item removed');
                },

                updateQuantity(index, newQuantity) {
                    if (newQuantity > 0) {
                        this.items[index].quantity = newQuantity;
                        this.saveToLocalStorage();
                        this.updateCartUI();
                        this.updateCartCounter();
                    }
                },

                saveToLocalStorage() {
                    localStorage.setItem('shoppingCart', JSON.stringify(this.items));
                },

                loadFromLocalStorage() {
                    const savedItems = localStorage.getItem('shoppingCart');
                    if (savedItems) {
                        try {
                            this.items = JSON.parse(savedItems);
                        } catch (e) {
                            console.error("Error loading cart:", e);
                            this.items = [];
                        }
                    }
                },

                animateAddToCart(imageSrc) {
                    const flyingItem = document.createElement('div');
                    flyingItem.className = 'flying-item';
                    flyingItem.style.backgroundImage = `url(${imageSrc})`;

                    const button = document.querySelector('.add-to-cart-btn') || document.querySelector('.product-image');
                    if (!button) return;

                    const buttonRect = button.getBoundingClientRect();
                    const startX = buttonRect.left + buttonRect.width / 2;
                    const startY = buttonRect.top + buttonRect.height / 2;

                    const cartIcon = document.getElementById('cartIcon');
                    const cartRect = cartIcon.getBoundingClientRect();
                    const endX = cartRect.left + cartRect.width / 2 - startX;
                    const endY = cartRect.top + cartRect.height / 2 - startY;

                    flyingItem.style.left = `${startX}px`;
                    flyingItem.style.top = `${startY}px`;
                    flyingItem.style.setProperty('--end-x', `${endX}px`);
                    flyingItem.style.setProperty('--end-y', `${endY}px`);

                    document.body.appendChild(flyingItem);

                    setTimeout(() => {
                        flyingItem.remove();
                    }, 800);
                },

                updateCartUI() {
                    const cartItemsEl = document.getElementById('cartItems');
                    const cartTotalEl = document.getElementById('cartTotalPrice');

                    if (this.items.length === 0) {
                        cartItemsEl.innerHTML = '<div class="empty-cart">Your cart is empty</div>';
                    } else {
                        cartItemsEl.innerHTML = this.items.map((item, index) => `
                            <div class="cart-item">
                                <img src="${item.frontImage}" alt="${item.name}" class="cart-item-image">
                                <div class="cart-item-details">
                                    <div class="cart-item-title">${item.name}</div>
                                    <div class="cart-item-size">${item.gender === 'men' ? 'Men' : 'Women'}'s ${item.size}</div>
                                    <div class="cart-item-quantity">
                                        <button class="cart-item-decrease" data-index="${index}">-</button>
                                        <input type="number" min="1" value="${item.quantity}" class="cart-item-quantity-input" data-index="${index}">
                                        <button class="cart-item-increase" data-index="${index}">+</button>
                                    </div>
                                    <div class="cart-item-price">₱${(item.price * item.quantity).toFixed(2)}</div>
                                    <button class="cart-item-remove" data-index="${index}">Remove</button>
                                </div>
                            </div>
                        `).join('');

                        // Add event listeners for quantity changes
                        document.querySelectorAll('.cart-item-decrease').forEach(btn => {
                            btn.addEventListener('click', (e) => {
                                e.stopPropagation(); // Prevent closing the cart
                                const index = e.target.getAttribute('data-index');
                                this.updateQuantity(index, this.items[index].quantity - 1);
                            });
                        });

                        document.querySelectorAll('.cart-item-increase').forEach(btn => {
                            btn.addEventListener('click', (e) => {
                                e.stopPropagation(); // Prevent closing the cart
                                const index = e.target.getAttribute('data-index');
                                this.updateQuantity(index, this.items[index].quantity + 1);
                            });
                        });

                        document.querySelectorAll('.cart-item-quantity-input').forEach(input => {
                            input.addEventListener('change', (e) => {
                                e.stopPropagation(); // Prevent closing the cart
                                const index = e.target.getAttribute('data-index');
                                const newQuantity = parseInt(e.target.value) || 1;
                                this.updateQuantity(index, newQuantity);
                            });
                        });

                        document.querySelectorAll('.cart-item-remove').forEach(btn => {
                            btn.addEventListener('click', (e) => {
                                e.stopPropagation(); // Prevent closing the cart
                                const index = e.target.getAttribute('data-index');
                                this.removeItem(index);
                            });
                        });
                    }

                    cartTotalEl.textContent = `₱${this.total.toFixed(2)}`;
                },

                updateCartCounter() {
                    document.getElementById('cartCounter').textContent = this.itemCount;
                },

                showNotification(message) {
                    const notification = document.createElement('div');
                    notification.className = 'notification';
                    notification.textContent = message;
                    document.body.appendChild(notification);
                    setTimeout(() => notification.remove(), 2000);
                }
            };

            // Cart toggle functionality
            const cartSidebar = document.getElementById('cartSidebar');
            const cartOverlay = document.getElementById('cartOverlay');
            const closeCartBtn = document.getElementById('closeCartBtn');
            const cartIcon = document.getElementById('cartIcon');

            function openCart() {
                cartSidebar.classList.add('active');
                cartOverlay.classList.add('active');
                document.body.style.overflow = 'hidden';
            }

            function closeCart() {
                cartSidebar.classList.remove('active');
                cartOverlay.classList.remove('active');
                document.body.style.overflow = '';
            }

            // Toggle cart when clicking cart icon
            cartIcon.addEventListener('click', function (e) {
                e.stopPropagation();
                if (window.innerWidth <= 768) {
                    if (cartSidebar.classList.contains('active')) {
                        openCart();
                    } else {
                        openCart();
                    }
                } else {
                    openCart(); // Open cart for larger screens
                }
            });

            // Close cart when clicking overlay or close button
            cartOverlay.addEventListener('click', closeCart);
            closeCartBtn.addEventListener('click', closeCart);

            // Close cart when clicking outside
            document.addEventListener('click', function (e) {
                if (!cartSidebar.contains(e.target) && e.target !== cartIcon) {
                    closeCart();
                }
            });

            // Checkout button
            document.querySelector('.checkout-btn')?.addEventListener('click', () => {
                if (cart.items.length > 0) {
                    alert('Proceeding to checkout with ' + cart.itemCount + ' items');
                } else {
                    cart.showNotification('Your cart is empty!');
                }
            });

            // Initialize cart
            cart.init();

            // Mobile responsiveness
            window.addEventListener('resize', () => {
                if (window.innerWidth <= 768) {
                    cartSidebar.style.width = '100%';
                    closeCart(); // Ensure cart is closed in mobile view
                } else {
                    cartSidebar.style.width = '380px';
                }
            });

            // Navbar toggle functionality
            const menuToggle = document.querySelector('.menu-toggle');
            const menuList = document.querySelector('.ul-navbar');
            let isMobileView = window.innerWidth <= 768;

            function toggleMenu() {
                menuList.style.display = menuList.style.display === 'flex' ? 'none' : 'flex';
            }

            if (isMobileView) {
                menuList.style.display = 'none';
                menuToggle.addEventListener('click', toggleMenu);
            } else {
                menuList.style.display = 'flex';
            }

            window.addEventListener('resize', function () {
                const currentIsMobile = window.innerWidth <= 768;
                if (isMobileView !== currentIsMobile) {
                    isMobileView = currentIsMobile;
                    if (currentIsMobile) {
                        menuList.style.display = 'none';
                        menuToggle.addEventListener('click', toggleMenu);
                    } else {
                        menuList.style.display = 'flex';
                        menuToggle.removeEventListener('click', toggleMenu);
                    }
                }
            });
        });
    </script>




    <div class="cart-sidebar" id="cartSidebar">
        <div class="cart-header">
            <h3>Your Cart</h3>
            <button class="close-cart" id="closeCartBtn">&times;</button>
        </div>
        <div class="cart-items" id="cartItems">
            <!-- Cart items will be added here dynamically -->
        </div>
        <div class="cart-footer">
            <div class="cart-total">
                <span>Total:</span>
                <span id="cartTotalPrice">₱0.00</span>
            </div>
            <button class="checkout-btn">PROCEED TO CHECKOUT</button>
        </div>
    </div>
    <div class="cart-overlay" id="cartOverlay"></div>
</body>
</html>